{"version":3,"sources":["components/Card.tsx","components/BarChart.tsx","hooks/useAxios.tsx","components/LineChart.tsx","components/Status.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["numberWithComma","x","toString","replace","Card","title","today","total","color","Block","className","styled","li","props","BarChart","state","options","chart","id","xaxis","categories","series","name","data","getData","a","axios","get","i","res","key","value","temp_value","timeline","cases","push","substring","length","splice","setState","this","ChartBlock","type","width","Component","div","useAxios","url","useState","loading","error","useEffect","then","prev","LineChart","labels","show","rotate","rotateAlways","hideOverlappingLabels","minHeight","React","Status","icon","faHome","faBars","todayCases","recovered","todayRecovered","deaths","todayDeaths","ul","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7313f748.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport type CardProps = {\n  title: string;\n  total?: number;\n  today?: number;\n  color: string;\n};\n\nconst numberWithComma = (x: number) =>\n  x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\nexport default function Card({ title, today, total, color }: CardProps) {\n  return (\n    <Block color={color}>\n      <h3 className=\"title\">{title}</h3>\n      <div className=\"total\">{total ? numberWithComma(total) : \"-\"}</div>\n      <div className=\"today\">{today ? numberWithComma(today) : \"-\"}</div>\n    </Block>\n  );\n}\n\nconst Block = styled.li<{ color: string }>`\n  background-color: beige;\n  padding: 10px;\n  display: block;\n  text-align: center;\n  width: 80px;\n  color: ${(props) => props.color};\n  /* &:not(:first-child) {\n    border-left-color: rgb(237, 240, 242);\n    border-left-style: solid;\n    border-left-width: 1px;\n  } */\n  & > .title {\n    margin: 0;\n    font-size: 1.3rem;\n    line-height: 1.8rem;\n    letter-spacing: -0.8px;\n  }\n\n  & > .total {\n    font-size: 1.8rem;\n    line-height: 2.2rem;\n    font-weight: bold;\n    letter-spacing: -0.4px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport styled from \"styled-components\";\n\nimport axios from \"axios\";\n\nclass BarChart extends Component {\n  state = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        categories: [],\n      },\n    },\n    series: [\n      {\n        name: \"확진자수\",\n        data: [],\n      },\n    ],\n  };\n\n  getData = async () => {\n    const res = await axios.get(\n      \"https://disease.sh/v3/covid-19/historical/KR?lastdays=8\"\n    );\n\n    let key = [];\n    let value = [];\n    let temp_value = [];\n\n    for (let i in res.data.timeline.cases) {\n      //   console.log(i + \" : \" + res.data.timeline.cases[i]);\n      key.push(i.substring(0, i.length - 3));\n      temp_value.push(res.data.timeline.cases[i]);\n    }\n\n    key.splice(0, 1);\n    for (let i = 0; i < temp_value.length; i++) {\n      if (i === 0) {\n        continue;\n      }\n      value.push(temp_value[i] - temp_value[i - 1]);\n    }\n\n    this.setState({\n      options: {\n        xaxis: {\n          categories: key,\n        },\n      },\n      series: [\n        {\n          data: value,\n        },\n      ],\n    });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <ChartBlock>\n        <h1>막대 일별 확진자 그래프</h1>\n        <Chart\n          options={this.state.options}\n          series={this.state.series}\n          type=\"bar\"\n          width=\"400px\"\n        />\n      </ChartBlock>\n    );\n  }\n}\n\nconst ChartBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default BarChart;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction useAxios<T extends any>(url: string) {\n  const [state, setState] = useState<{\n    loading: boolean;\n    error: Error | null;\n    data: T | null;\n  }>({\n    loading: true,\n    error: null,\n    data: null,\n  });\n\n  useEffect(() => {\n    axios.get<T>(url).then((data) => {\n      setState((prev) => ({\n        ...prev,\n        loading: false,\n        data: data.data,\n      }));\n    });\n  }, [url]);\n\n  return state;\n}\n\nexport default useAxios;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nclass LineChart extends React.Component {\n  state = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        categories: [],\n      },\n    },\n    series: [\n      {\n        name: \"확진자수\",\n        data: [],\n      },\n    ],\n  };\n\n  getData = async () => {\n    const res = await axios.get(\n      \"https://disease.sh/v3/covid-19/historical/KR?lastdays=all\"\n    );\n\n    let key = [];\n    let value = [];\n    let temp_value = [];\n\n    for (let i in res.data.timeline.cases) {\n      //   console.log(i + \" : \" + res.data.timeline.cases[i]);\n      key.push(i.substring(0, i.length - 3));\n      temp_value.push(res.data.timeline.cases[i]);\n    }\n\n    for (let i = 0; i < temp_value.length; i++) {\n      value.push(temp_value[i]);\n    }\n\n    this.setState({\n      options: {\n        xaxis: {\n          categories: key,\n          labels: {\n            show: true,\n            rotate: 10,\n            rotateAlways: false,\n            hideOverlappingLabels: true,\n            minHeight: 10,\n          },\n        },\n      },\n      series: [\n        {\n          data: value,\n        },\n      ],\n    });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <ChartBlock>\n        <h1>막대 일별 확진자 그래프</h1>\n        <Chart\n          options={this.state.options}\n          series={this.state.series}\n          type=\"line\"\n          width=\"400px\"\n        />\n      </ChartBlock>\n    );\n  }\n}\n\nconst ChartBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default LineChart;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\nimport BarChart from \"./BarChart\";\n\nimport useAxios from \"../hooks/useAxios\";\n\nimport { faHome, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport LineChart from \"./LineChart\";\nimport axios from \"axios\";\n\ntype ContriesData = {\n  updated: number;\n  country: string;\n  countryInfo: {\n    _id: number;\n    iso2: string;\n    iso3: string;\n    lat: number;\n    long: number;\n    flag: string;\n  };\n  cases: number;\n  todayCases: number;\n  deaths: number;\n  todayDeaths: number;\n  recovered: number;\n  todayRecovered: number;\n  active: number;\n  critical: number;\n  casesPerOneMillion: number;\n  deathsPerOneMillion: number;\n  tests: number;\n  testsPerOneMillion: number;\n  population: number;\n  continent: number;\n  oneCasePerPeople: number;\n  oneDeathPerPeople: number;\n  oneTestPerPeople: number;\n  activePerOneMillion: number;\n  recoveredPerOneMillion: number;\n  criticalPerOneMillion: number;\n};\n\nconst Status = () => {\n  const { data, loading, error } = useAxios<ContriesData>(\n    \"https://disease.sh/v3/covid-19/countries/KR\"\n  );\n\n  // const getData = async () => {\n  //   let dd = await axios.get(\n  //     \"/korea/country/new/?serviceKey=73c2feb522af20d648a4438e7012568ca\"\n  //   );\n  //   console.log(dd.data);\n  // };\n\n  // getData();\n\n  return (\n    <>\n      <FontAwesomeIcon icon={faHome} />\n      <span>Covid 19</span>\n      <FontAwesomeIcon icon={faBars} />\n      <h1>투데이 코로나</h1>\n      <Block>\n        <Card\n          title=\"확진자\"\n          total={data?.cases}\n          today={data?.todayCases}\n          color={\"#e52c0c\"}\n        />\n        <Card\n          title=\"완치자\"\n          total={data?.recovered}\n          today={data?.todayRecovered}\n          color={\"#3567e0\"}\n        />\n        <Card\n          title=\"사망자\"\n          total={data?.deaths}\n          today={data?.todayDeaths}\n          color={\"black\"}\n        />\n      </Block>\n      <Block>\n        <BarChart />\n      </Block>\n      <Block>\n        <LineChart />\n      </Block>\n      <Block>지역별 차트(?) 표</Block>\n    </>\n  );\n};\n\nexport default Status;\n\nconst Block = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  list-style-type: none;\n  padding: 0;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Status from \"./components/Status\";\n\nfunction App() {\n  return (\n    <Container>\n      <Status />\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 400px;\n  margin: 0 auto;\n  background-color: white;\n`;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}