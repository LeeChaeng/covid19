{"version":3,"sources":["utils/numberWithComma.tsx","components/Card.tsx","hooks/useAxios.tsx","components/Header.tsx","components/Status.tsx","components/BarChart.tsx","components/LineChart.tsx","components/Coutry.tsx","static/enum.tsx","components/CountryBoard.tsx","components/KRInfo.tsx","App.tsx","index.tsx"],"names":["numberWithComma","x","toString","replace","Card","title","today","total","color","Block","className","styled","li","props","useAxios","url","useState","loading","error","data","state","setState","useEffect","axios","get","then","prev","Info","div","Point","Title","h1","TitleBox","SubTitle","Header","icon","faBars","Status","Container","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths","ul","BarChart","useMemo","key","value","temp_value","i","timeline","push","substring","length","splice","ChartWrapper","options","chart","id","xaxis","categories","grid","row","colors","borderColor","fill","type","gradient","shade","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","colorStops","plotOptions","bar","columnWidth","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","yaxis","axisBorder","show","axisTicks","labels","tooltip","custom","dataPointIndex","series","seriesIndex","split","month","day","name","width","LineChart","getData","a","res","rotate","rotateAlways","hideOverlappingLabels","minHeight","this","ChartBlock","React","Component","Img","img","Country","flag","src","alt","ISO","code","korName","CountryBoard","map","cur","find","iso","KRInfo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90b6dd3c.chunk.js","sourcesContent":["export const numberWithComma = (x: number) =>\n  x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { numberWithComma } from \"../utils/numberWithComma\";\n\nexport type CardProps = {\n  title: string;\n  total?: number;\n  today?: number;\n  color: string;\n};\n\nexport default function Card({ title, today, total, color }: CardProps) {\n  return (\n    <Block color={color}>\n      <h3 className=\"title\">{title}</h3>\n      <div className=\"today\">{today ? numberWithComma(today) : \"-\"}</div>\n      <div className=\"total\">{total ? numberWithComma(total) : \"-\"}</div>\n    </Block>\n  );\n}\n\nconst Block = styled.li<{ color: string }>`\n  border-radius: 10px;\n  box-shadow: 9px 10px 30px -1px rgba(0, 0, 0, 0.13);\n  padding: 10px;\n  display: block;\n  text-align: center;\n  width: 80px; /* color: ${(props) => props.color}; */\n  /* &:not(:first-child) {\n    border-left-color: rgb(237, 240, 242);\n    border-left-style: solid;\n    border-left-width: 1px;\n  } */\n  & > .title {\n    margin: 0;\n    font-size: 1.3rem;\n    line-height: 1.8rem;\n    letter-spacing: -0.8px;\n  }\n\n  & > .today {\n    font-size: 1.8rem;\n    line-height: 2.2rem;\n    font-weight: bold;\n    letter-spacing: -0.4px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction useAxios<T extends any>(url: string) {\n  const [state, setState] = useState<{\n    loading: boolean;\n    error: Error | null;\n    data: T | null;\n  }>({\n    loading: true,\n    error: null,\n    data: null,\n  });\n\n  useEffect(() => {\n    axios.get<T>(url).then((data) => {\n      setState((prev) => ({\n        ...prev,\n        loading: false,\n        data: data.data,\n      }));\n    });\n  }, [url]);\n\n  return state;\n}\n\nexport default useAxios;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Header = () => {\n  return (\n    <div>\n      <Info>\n        <Block>\n          <span>위기경보</span> <Point>심각</Point>\n        </Block>\n        <FontAwesomeIcon icon={faBars} />\n      </Info>\n      <TitleBox>\n        <Title>투데이 코로나</Title>\n        <SubTitle>Today Corona</SubTitle>\n      </TitleBox>\n    </div>\n  );\n};\n\nconst Info = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-size: 13px;\n  align-items: center;\n`;\n\nconst Point = styled.div`\n  background-color: #8f4c8b;\n  border-radius: 10px;\n  padding: 0px 5px;\n  color: #fff;\n`;\n\nconst Block = styled.div`\n  display: flex;\n  width: 25%;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 20px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TitleBox = styled.div`\n  margin-top: 3px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst SubTitle = styled.div`\n  font-size: 10px;\n`;\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"./Card\";\n\nimport useAxios from \"../hooks/useAxios\";\nimport Header from \"./Header\";\n\ntype KoreaData = {\n  updated: number;\n  country: string;\n  countryInfo: {\n    _id: number;\n    iso2: string;\n    iso3: string;\n    lat: number;\n    long: number;\n    flag: string;\n  };\n  cases: number;\n  todayCases: number;\n  deaths: number;\n  todayDeaths: number;\n  recovered: number;\n  todayRecovered: number;\n  active: number;\n  critical: number;\n  casesPerOneMillion: number;\n  deathsPerOneMillion: number;\n  tests: number;\n  testsPerOneMillion: number;\n  population: number;\n  continent: number;\n  oneCasePerPeople: number;\n  oneDeathPerPeople: number;\n  oneTestPerPeople: number;\n  activePerOneMillion: number;\n  recoveredPerOneMillion: number;\n  criticalPerOneMillion: number;\n};\n\nconst Status = () => {\n  const { data, loading, error } = useAxios<KoreaData>(\n    \"https://disease.sh/v3/covid-19/countries/KR\"\n  );\n\n  return (\n    <Container>\n      <Header />\n      <Block>\n        <Card\n          title=\"확진자\"\n          total={data?.cases}\n          today={data?.todayCases}\n          color={\"#e52c0c\"}\n        />\n        <Card\n          title=\"완치자\"\n          total={data?.recovered}\n          today={data?.todayRecovered}\n          color={\"#3567e0\"}\n        />\n        <Card\n          title=\"사망자\"\n          total={data?.deaths}\n          today={data?.todayDeaths}\n          color={\"black\"}\n        />\n      </Block>\n    </Container>\n  );\n};\n\nexport default Status;\n\nconst Container = styled.div`\n  padding: 30px;\n  padding-bottom: 0px;\n`;\nconst Block = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  list-style-type: none;\n  padding: 30px 0px;\n`;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport useAxios from \"../hooks/useAxios\";\nimport Chart from \"react-apexcharts\";\nimport { numberWithComma } from \"../utils/numberWithComma\";\n\ntype HistoricalData = {\n  country: string;\n  province: string[];\n  timeline: {\n    cases: {\n      [key: string]: number;\n    };\n    deaths: {\n      [key: string]: number;\n    };\n    recovered: {\n      [key: string]: number;\n    };\n  };\n};\n\nexport default function BarChart() {\n  const { data } = useAxios<HistoricalData>(\n    \"https://disease.sh/v3/covid-19/historical/KR?lastdays=8\"\n  );\n\n  const { key, value } = useMemo<{ key: string[]; value: number[] }>(() => {\n    const key: string[] = [];\n    const value: number[] = [];\n    const temp_value: number[] = [];\n    if (!data) {\n      return { key, value };\n    }\n\n    for (let i in data.timeline.cases) {\n      key.push(i.substring(0, i.length - 3));\n      temp_value.push(data.timeline.cases[i]);\n    }\n\n    key.splice(0, 1);\n    for (let i = 1; i < temp_value.length; i++) {\n      value.push(temp_value[i] - temp_value[i - 1]);\n    }\n\n    return { key, value };\n  }, [data]);\n\n  return (\n    <ChartWrapper>\n      <h1>막대 일별 확진자 그래프</h1>\n      <Chart\n        options={{\n          chart: {\n            id: \"basic-bar\",\n          },\n          xaxis: {\n            categories: key,\n          },\n          grid: {\n            row: {\n              colors: [\"#fff\", \"#f2f2f2\"],\n            },\n            borderColor: \"#transparent\",\n          },\n          fill: {\n            colors: [\"#265e9077\"],\n            type: \"gradient\",\n            gradient: {\n              shade: \"dark\",\n              type: \"vertical\",\n              shadeIntensity: 1,\n              gradientToColors: [\"#6b266abb\"], // optional, if not defined - uses the shades of same color in series\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [0, 100],\n              colorStops: [],\n            },\n          },\n          plotOptions: {\n            bar: {\n              columnWidth: \"60%\",\n              dataLabels: {\n                position: \"top\", // top, center, bottom\n              },\n            },\n          },\n          dataLabels: {\n            enabled: true,\n            formatter: function (val: number) {\n              return numberWithComma(val);\n            },\n            offsetY: -20,\n            style: {\n              fontSize: \"12px\",\n              colors: [\"#304758\"],\n            },\n          },\n          yaxis: {\n            axisBorder: {\n              show: false,\n            },\n            axisTicks: {\n              show: false,\n            },\n            labels: {\n              show: false,\n            },\n          },\n          tooltip: {\n            custom: ({\n              dataPointIndex,\n              series,\n              seriesIndex,\n            }: {\n              dataPointIndex: number;\n              series: number[][];\n              seriesIndex: number;\n            }) => {\n              const [month, day] = key[dataPointIndex].split(\"/\");\n              const value = series[seriesIndex][dataPointIndex];\n              return `<div class=\"tooltip>\n                  <div class=\"tooltip__date\">${month}월 ${day}일</div>\n                  <div class=\"tooltip__cases\">\n                    <span class=\"tooltip__cases__title\">확진자 수</span>\n                    <span class=\"tooltip__cases__value\">${numberWithComma(\n                      value\n                    )}<span>\n                  </div>\n                </div>`;\n            },\n          },\n        }}\n        series={[\n          {\n            name: \"확진자수\",\n            data: value,\n          },\n        ]}\n        type=\"bar\"\n        width=\"400px\"\n      />\n    </ChartWrapper>\n  );\n}\n\nconst ChartWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Tooltip = styled.div``;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nclass LineChart extends React.Component {\n  state = {\n    options: {\n      chart: {\n        id: \"basic-bar\",\n      },\n      xaxis: {\n        categories: [],\n      },\n    },\n    series: [\n      {\n        name: \"확진자수\",\n        data: [],\n      },\n    ],\n  };\n\n  getData = async () => {\n    const res = await axios.get(\n      \"https://disease.sh/v3/covid-19/historical/KR?lastdays=all\"\n    );\n\n    let key = [];\n    let value = [];\n    let temp_value = [];\n\n    for (let i in res.data.timeline.cases) {\n      //   console.log(i + \" : \" + res.data.timeline.cases[i]);\n      key.push(i.substring(0, i.length - 3));\n      temp_value.push(res.data.timeline.cases[i]);\n    }\n\n    for (let i = 0; i < temp_value.length; i++) {\n      value.push(temp_value[i]);\n    }\n\n    this.setState({\n      options: {\n        xaxis: {\n          categories: key,\n          labels: {\n            show: true,\n            rotate: 10,\n            rotateAlways: false,\n            hideOverlappingLabels: true,\n            minHeight: 10,\n          },\n        },\n      },\n      series: [\n        {\n          data: value,\n        },\n      ],\n    });\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return (\n      <ChartBlock>\n        <h1>꺾은선 총 확진자수 증가 추이</h1>\n        <Chart\n          options={this.state.options}\n          series={this.state.series}\n          type=\"line\"\n          width=\"400px\"\n        />\n      </ChartBlock>\n    );\n  }\n}\n\nconst ChartBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport default LineChart;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { numberWithComma } from \"../utils/numberWithComma\";\n\ntype CountryProps = {\n  name: string | undefined;\n  cases: number;\n  flag: string;\n};\n\nconst Country = ({ name, cases, flag }: CountryProps) => {\n  return (\n    <Block>\n      <div>\n        <Img src={flag} alt={name} />\n        {name}\n      </div>\n      <div>{numberWithComma(cases)}</div>\n    </Block>\n  );\n};\n\nconst Block = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Img = styled.img`\n  width: 10%;\n`;\n\nexport default Country;\n","export const ISO = [\n  { code: \"AF\", name: \"Afghanistan\", korName: \"아프카니스탄\" },\n  { code: \"AF\", name: \"Afghanistan\", korName: \"아프가니스탄\" },\n  { code: \"DZ\", name: \"Algeria\", korName: \"알제리\" },\n  { code: \"AD\", name: \"Andorra\", korName: \"안도라\" },\n  { code: \"AI\", name: \"Anguilla\", korName: \"앙귈라\" },\n  { code: \"AG\", name: \"Antigua and Barbuda\", korName: \"안티가바부다\" },\n  { code: \"AM\", name: \"Armenia\", korName: \"아르메니아\" },\n  { code: \"AU\", name: \"Australia\", korName: \"호주\" },\n  { code: \"AZ\", name: \"Azerbaijan\", korName: \"아제르바이잔\" },\n  { code: \"BH\", name: \"Bahrain\", korName: \"바레인\" },\n  { code: \"BB\", name: \"Barbados\", korName: \"바베이도스\" },\n  { code: \"BE\", name: \"Belgium\", korName: \"벨기에\" },\n  { code: \"BJ\", name: \"Benin\", korName: \"베닝\" },\n  { code: \"BT\", name: \"Bhutan\", korName: \"부탄\" },\n  {\n    code: \"BA\",\n    name: \"Bosnia and Herzegovina\",\n    korName: \"보스니아 헤르체고비나\",\n  },\n  { code: \"BV\", name: \"Bouvet Island\", korName: \"보빗군도\" },\n  {\n    code: \"IO\",\n    name: \"British Indian Ocean Territory\",\n    korName: \"영령 인도양\",\n  },\n  { code: \"BG\", name: \"Bulgaria\", korName: \"불가리아\" },\n  { code: \"BI\", name: \"Burundi\", korName: \"부룬디\" },\n  { code: \"CM\", name: \"Cameroon\", korName: \"카메룬\" },\n  { code: \"CV\", name: \"Cabo Verde\", korName: \"카보베르데\" },\n  {\n    code: \"CF\",\n    name: \"Central African Republic\",\n    korName: \"중앙아프리카\",\n  },\n  {\n    code: \"CF\",\n    name: \"CAR\",\n    korName: \"중앙아프리카\",\n  },\n  {\n    code: \"CF\",\n    name: \"Central African Republic\",\n    korName: \"중앙아프리카공화국\",\n  },\n  { code: \"CL\", name: \"Chile\", korName: \"칠레\" },\n  {\n    code: \"CX\",\n    name: \"Christmas Island\",\n    korName: \"크리스마스 아일랜드\",\n  },\n  { code: \"CO\", name: \"Colombia\", korName: \"콜롬비아\" },\n  { code: \"CG\", name: \"Congo\", korName: \"콩고공화국\" },\n  { code: \"CG\", name: \"Congo\", korName: \"콩고\" },\n  { code: \"CR\", name: \"Costa Rica\", korName: \"코스타리카\" },\n  { code: \"HR\", name: \"Croatia\", korName: \"크로아티아\" },\n  { code: \"CY\", name: \"Cyprus\", korName: \"사이프러스\" },\n  { code: \"DK\", name: \"Denmark\", korName: \"덴마크\" },\n  { code: \"DM\", name: \"Dominica\", korName: \"도미니카\" },\n  { code: \"TL\", name: \"Timor-Leste\", korName: \"동티모르\" },\n  { code: \"EG\", name: \"Egypt\", korName: \"이집트\" },\n  { code: \"GQ\", name: \"Equatorial Guinea\", korName: \"적도기니\" },\n  { code: \"EE\", name: \"Estonia\", korName: \"에스토니아\" },\n  {\n    code: \"FK\",\n    name: \"Falkland Islands-Malvinas\",\n    korName: \"포클랜드 군도\",\n  },\n  {\n    code: \"FK\",\n    name: \"Falkland Islands\",\n    korName: \"포클랜드 제도\",\n  },\n  { code: \"FJ\", name: \"Fiji\", korName: \"피지\" },\n  { code: \"FR\", name: \"France\", korName: \"프랑스\" },\n  { code: \"PF\", name: \"French Polynesia\", korName: \"폴리네시아 (프랑스령)\" },\n  { code: \"GA\", name: \"Gabon\", korName: \"가봉\" },\n  { code: \"GE\", name: \"Georgia\", korName: \"조지아\" },\n  { code: \"GH\", name: \"Ghana\", korName: \"가나\" },\n  { code: \"GR\", name: \"Greece\", korName: \"그리스\" },\n  { code: \"GD\", name: \"Grenada\", korName: \"그레나다\" },\n  { code: \"GU\", name: \"Guam\", korName: \"괌\" },\n  { code: \"GN\", name: \"Guinea\", korName: \"기니\" },\n  { code: \"GY\", name: \"Guyana\", korName: \"기아나\" },\n  { code: \"HN\", name: \"Honduras\", korName: \"온두라스\" },\n  { code: \"HU\", name: \"Hungary\", korName: \"헝가리\" },\n  { code: \"IN\", name: \"India\", korName: \"인도\" },\n  { code: \"IR\", name: \"Iran\", korName: \"이란\" },\n  { code: \"IE\", name: \"Ireland\", korName: \"아일랜드\" },\n  { code: \"IT\", name: \"Italy\", korName: \"이탈리아\" },\n  { code: \"JP\", name: \"Japan\", korName: \"일본\" },\n  { code: \"KZ\", name: \"Kazakhstan\", korName: \"카자흐스탄\" },\n  { code: \"KI\", name: \"Kiribati\", korName: \"키리바티\" },\n  { code: \"KI\", name: \"Kiribati\", korName: \"키리바시\" },\n  { code: \"KR\", name: \"S. Korea\", korName: \"대한민국\" },\n  { code: \"KR\", name: \"South Korea\", korName: \"대한민국\" },\n  { code: \"KG\", name: \"Kyrgyzstan\", korName: \"키르기스스탄\" },\n  { code: \"KG\", name: \"Kyrgyzstan\", korName: \"키르기즈스탄\" },\n  { code: \"LV\", name: \"Latvia\", korName: \"라트비아\" },\n  { code: \"LS\", name: \"Lesotho\", korName: \"레소토\" },\n  { code: \"LY\", name: \"Libya\", korName: \"리비아\" },\n  { code: \"LT\", name: \"Lithuania\", korName: \"리투아니아\" },\n  { code: \"MO\", name: \"Macao\", korName: \"마카오\" },\n  { code: \"MG\", name: \"Madagascar\", korName: \"마다가스카르\" },\n  { code: \"MY\", name: \"Malaysia\", korName: \"말레이시아\" },\n  { code: \"ML\", name: \"Mali\", korName: \"말리\" },\n  { code: \"MH\", name: \"Marshall Islands\", korName: \"마셜제도\" },\n  { code: \"MH\", name: \"Marshall Islands\", korName: \"마샬제도\" },\n  { code: \"MR\", name: \"Mauritania\", korName: \"모리타니아\" },\n  { code: \"YT\", name: \"Mayotte\", korName: \"메요트\" },\n  { code: \"FM\", name: \"Micronesia\", korName: \"마이크로네시아\" },\n  { code: \"FM\", name: \"Micronesia\", korName: \"미크로네시아\" },\n  { code: \"MC\", name: \"Monaco\", korName: \"모나코\" },\n  { code: \"MS\", name: \"Montserrat\", korName: \"몬트세라트\" },\n  { code: \"MZ\", name: \"Mozambique\", korName: \"모잠비크\" },\n  { code: \"NA\", name: \"Namibia\", korName: \"나미비아\" },\n  { code: \"NP\", name: \"Nepal\", korName: \"네팔\" },\n  { code: \"AN\", name: \"Netherlands Antilles\", korName: \"네덜란드 열도\" },\n  { code: \"NZ\", name: \"New Zealand\", korName: \"뉴질랜드\" },\n  { code: \"NE\", name: \"Niger\", korName: \"니제르\" },\n  { code: \"NU\", name: \"Niue\", korName: \"니우에\" },\n  {\n    code: \"MP\",\n    name: \"Northern Mariana Islands\",\n    korName: \"북마리아나 군도\",\n  },\n  { code: \"OM\", name: \"Oman\", korName: \"오만\" },\n  { code: \"PW\", name: \"Palau\", korName: \"팔라우\" },\n  { code: \"PA\", name: \"Panama\", korName: \"파나마\" },\n  { code: \"PY\", name: \"Paraguay\", korName: \"파라과이\" },\n  { code: \"PH\", name: \"Philippines\", korName: \"필리핀\" },\n  { code: \"PL\", name: \"Poland\", korName: \"폴란드\" },\n  { code: \"PR\", name: \"Puerto Rico\", korName: \"푸에르토리코\" },\n  { code: \"RE\", name: \"Réunion\", korName: \"레위니옹\" },\n  { code: \"RU\", name: \"Russia\", korName: \"러시아\" },\n  { code: \"SH\", name: \"Saint Helena\", korName: \"세인트 헬레나\" },\n  { code: \"LC\", name: \"Saint Lucia\", korName: \"세인트루시아\" },\n  {\n    code: \"VC\",\n    name: \"St. Vincent and the Grenadines\",\n    korName: \"세인트빈센트 그레나딘\",\n  },\n  {\n    code: \"VC\",\n    name: \"St. Vincent Grenadines\",\n    korName: \"세인트빈센트 그레나딘\",\n  },\n  { code: \"SM\", name: \"San Marino\", korName: \"산마리노\" },\n  { code: \"SA\", name: \"Saudi Arabia\", korName: \"사우디아라비아\" },\n  { code: \"SC\", name: \"Seychelles\", korName: \"세이셸\" },\n  { code: \"SG\", name: \"Singapore\", korName: \"싱가포르\" },\n  { code: \"SI\", name: \"Slovenia\", korName: \"슬로베니아\" },\n  { code: \"SO\", name: \"Somalia\", korName: \"소말리아\" },\n  {\n    code: \"GS\",\n    name: \"South Georgia & the South Sandwich Islands\",\n    korName: \"남조지아 & 남샌드위치 군도\",\n  },\n  { code: \"LK\", name: \"Sri Lanka\", korName: \"스리랑카\" },\n  { code: \"SR\", name: \"Suriname\", korName: \"수리남\" },\n  { code: \"SZ\", name: \"Eswatini\", korName: \"에스와티니\" },\n  { code: \"CH\", name: \"Switzerland\", korName: \"스위스\" },\n  { code: \"TW\", name: \"Taiwan\", korName: \"대만\" },\n  {\n    code: \"TZ\",\n    name: \"Tanzania\",\n    korName: \"탄자니아\",\n  },\n  { code: \"TG\", name: \"Togo\", korName: \"토고\" },\n  { code: \"TO\", name: \"Tonga\", korName: \"통가\" },\n  { code: \"TN\", name: \"Tunisia\", korName: \"튀니지\" },\n  { code: \"TM\", name: \"Turkmenistan\", korName: \"투르크메니스탄\" },\n  { code: \"TV\", name: \"Tuvalu\", korName: \"투발루\" },\n  { code: \"UA\", name: \"Ukraine\", korName: \"우크라이나\" },\n  { code: \"GB\", name: \"UK\", korName: \"영국\" },\n  {\n    code: \"UM\",\n    name: \"United States Minor Outlying Islands\",\n    korName: \"마이너 아우틀링 합중국 군도\",\n  },\n  { code: \"UZ\", name: \"Uzbekistan\", korName: \"우즈베키스탄\" },\n  { code: \"VA\", name: \"Vatican City\", korName: \"바티칸 시국\" },\n  { code: \"VN\", name: \"Vietnam\", korName: \"베트남\" },\n  {\n    code: \"VG\",\n    name: \"VirginnIslands -British\",\n    korName: \"영령 버진군도\",\n  },\n  { code: \"EH\", name: \"Western Sahara\", korName: \"서사하라\" },\n  { code: \"YU\", name: \"Yugoslavia\", korName: \"유고\" },\n  { code: \"ZM\", name: \"Zambia\", korName: \"잠비아\" },\n  { code: \"AL\", name: \"Albania\", korName: \"알바니아\" },\n  { code: \"AS\", name: \"American Samoa\", korName: \"사모아(미국령)\" },\n  { code: \"AO\", name: \"Angola\", korName: \"앙골라\" },\n  { code: \"AQ\", name: \"Antarctica\", korName: \"안타티카\" },\n  { code: \"AR\", name: \"Argentina\", korName: \"아르헨티나\" },\n  { code: \"AW\", name: \"Aruba\", korName: \"아루바\" },\n  { code: \"AT\", name: \"Austria\", korName: \"오스트리아\" },\n  { code: \"BS\", name: \"Bahamas\", korName: \"바하마\" },\n  { code: \"BD\", name: \"Bangladesh\", korName: \"방글라데시\" },\n  { code: \"BY\", name: \"Belarus\", korName: \"벨라루스\" },\n  { code: \"BZ\", name: \"Belize\", korName: \"벨리즈\" },\n  { code: \"BM\", name: \"Bermuda\", korName: \"버뮤다\" },\n  { code: \"BO\", name: \"Bolivia\", korName: \"볼리비아\" },\n  { code: \"BW\", name: \"Botswana\", korName: \"보츠와나\" },\n  { code: \"BR\", name: \"Brazil\", korName: \"브라질\" },\n  { code: \"BN\", name: \"Brunei\", korName: \"브루나이\" },\n  { code: \"BF\", name: \"Burkina Faso\", korName: \"부르키나파소\" },\n  { code: \"KH\", name: \"Cambodia\", korName: \"캄보디아\" },\n  { code: \"CA\", name: \"Canada\", korName: \"캐나다\" },\n  { code: \"KY\", name: \"Cayman Islands\", korName: \"영령 캐이맨 군도\" },\n  { code: \"TD\", name: \"Chad\", korName: \"차드\" },\n  { code: \"CN\", name: \"China\", korName: \"중국\" },\n  { code: \"CC\", name: \"CocosKeeling Islands\", korName: \"코스 군도\" },\n  { code: \"KM\", name: \"Comoros\", korName: \"코모로스\" },\n  { code: \"KM\", name: \"Comoros\", korName: \"코모로\" },\n  { code: \"CK\", name: \"Cook Islands\", korName: \"쿡제도\" },\n  { code: \"CI\", name: \"Ivory Coast\", korName: \"코트디부아르\" },\n  { code: \"CU\", name: \"Cuba\", korName: \"쿠바\" },\n  { code: \"CZ\", name: \"Czechia\", korName: \"체코\" },\n  { code: \"DJ\", name: \"Djibouti\", korName: \"지부티\" },\n  { code: \"DO\", name: \"Dominican Republic\", korName: \"도미니카 공화국\" },\n  { code: \"EC\", name: \"Ecuador\", korName: \"에콰도르\" },\n  { code: \"SV\", name: \"El Salvador\", korName: \"엘살바도르\" },\n  { code: \"ER\", name: \"Eritrea\", korName: \"에리트리아\" },\n  { code: \"ET\", name: \"Ethiopia\", korName: \"에티오피아\" },\n  { code: \"FO\", name: \"Faeroe Islands\", korName: \"페로 제도\" },\n  { code: \"FI\", name: \"Finland\", korName: \"핀란드\" },\n  { code: \"GF\", name: \"French Guiana\", korName: \"불령 가이아나\" },\n  {\n    code: \"TF\",\n    name: \"French Southern Territories\",\n    korName: \"불령 남부지역\",\n  },\n  { code: \"GM\", name: \"Gambia\", korName: \"감비아\" },\n  { code: \"DE\", name: \"Germany\", korName: \"독일\" },\n  { code: \"GI\", name: \"Gibraltar\", korName: \"지브랄타\" },\n  { code: \"GL\", name: \"Greenland\", korName: \"그린랜드\" },\n  { code: \"GP\", name: \"Guadeloupe\", korName: \"과델로프\" },\n  { code: \"GT\", name: \"Guatemala\", korName: \"과테말라\" },\n  { code: \"GW\", name: \"Guinea-Bissau\", korName: \"기네비소\" },\n  { code: \"HT\", name: \"Haiti\", korName: \"아이티\" },\n  { code: \"HK\", name: \"Hong Kong\", korName: \"홍콩\" },\n  { code: \"IS\", name: \"Iceland\", korName: \"아이슬란드\" },\n  { code: \"ID\", name: \"Indonesia\", korName: \"인도네시아\" },\n  { code: \"IQ\", name: \"Iraq\", korName: \"이라크\" },\n  { code: \"IL\", name: \"Israel\", korName: \"이스라엘\" },\n  { code: \"JM\", name: \"Jamaica\", korName: \"자메이카\" },\n  { code: \"JO\", name: \"Jordan\", korName: \"요르단\" },\n  { code: \"JO\", name: \"Jordan\", korName: \"조르단\" },\n  { code: \"KE\", name: \"Kenya\", korName: \"케냐\" },\n  {\n    code: \"KP\",\n    name: \"Korea, Democratic People's Republic of\",\n    korName: \"북한\",\n  },\n  { code: \"KW\", name: \"Kuwait\", korName: \"쿠웨이트\" },\n  {\n    code: \"LA\",\n    name: \"Laos\",\n    korName: \"라오스\",\n  },\n  { code: \"LB\", name: \"Lebanon\", korName: \"레바논\" },\n  { code: \"LR\", name: \"Liberia\", korName: \"라이베리아\" },\n  { code: \"LI\", name: \"Liechtenstein\", korName: \"리히텐슈타인\" },\n  { code: \"LU\", name: \"Luxembourg\", korName: \"룩셈부르그\" },\n  {\n    code: \"MK\",\n    name: \"North Macedonia\",\n    korName: \"북 마케도니아\",\n  },\n  { code: \"MW\", name: \"Malawi\", korName: \"말라위\" },\n  { code: \"MV\", name: \"Maldives\", korName: \"몰디브\" },\n  { code: \"MT\", name: \"Malta\", korName: \"몰타\" },\n  { code: \"MQ\", name: \"Martinique\", korName: \"마티니크\" },\n  { code: \"MU\", name: \"Mauritius\", korName: \"모리셔스\" },\n  { code: \"MU\", name: \"Mauritius\", korName: \"모리티우스\" },\n  { code: \"MX\", name: \"Mexico\", korName: \"멕시코\" },\n  { code: \"MD\", name: \"Moldova\", korName: \"몰도바\" },\n  { code: \"MN\", name: \"Mongolia\", korName: \"몽골\" },\n  { code: \"MA\", name: \"Morocco\", korName: \"모로코\" },\n  { code: \"MM\", name: \"Myanmar\", korName: \"미얀마\" },\n  { code: \"NR\", name: \"Nauru\", korName: \"나우루\" },\n  { code: \"NL\", name: \"Netherlands\", korName: \"네덜란드\" },\n  { code: \"NC\", name: \"New Caledonia\", korName: \"뉴 칼레도니아\" },\n  { code: \"NI\", name: \"Nicaragua\", korName: \"니카라과\" },\n  { code: \"NG\", name: \"Nigeria\", korName: \"나이지리아\" },\n  { code: \"NF\", name: \"Norfolk Island\", korName: \"노폴크 아일랜드\" },\n  { code: \"NO\", name: \"Norway\", korName: \"노르웨이\" },\n  { code: \"PK\", name: \"Pakistan\", korName: \"파키스탄\" },\n  {\n    code: \"PS\",\n    name: \"Palestine\",\n    korName: \"팔레스타인\",\n  },\n  { code: \"PG\", name: \"Papua New Guinea\", korName: \"파푸아뉴기니\" },\n  { code: \"PE\", name: \"Peru\", korName: \"페루\" },\n  { code: \"PN\", name: \"Pitcairn\", korName: \"피트카이른\" },\n  { code: \"PT\", name: \"Portugal\", korName: \"포루투갈\" },\n  { code: \"QA\", name: \"Qatar\", korName: \"카타르\" },\n  { code: \"RO\", name: \"Romania\", korName: \"루마니아\" },\n  { code: \"RW\", name: \"Rwanda\", korName: \"르완다\" },\n  {\n    code: \"KN\",\n    name: \"Saint Kitts and Nevis\",\n    korName: \"세인트키츠 네비스\",\n  },\n  {\n    code: \"PM\",\n    name: \"Saint Pierre Miquelon\",\n    korName: \"생피에르 미클롱\",\n  },\n  { code: \"WS\", name: \"Samoa\", korName: \"사모아\" },\n  {\n    code: \"ST\",\n    name: \"Sao Tome and Principe\",\n    korName: \"상토메 프린스페\",\n  },\n  { code: \"SN\", name: \"Senegal\", korName: \"세네갈\" },\n  { code: \"SL\", name: \"Sierra Leone\", korName: \"시에라 리온\" },\n  { code: \"SK\", name: \"Slovakia\", korName: \"슬로바키아\" },\n  { code: \"SB\", name: \"Solomon Islands\", korName: \"솔로몬제도\" },\n  { code: \"ZA\", name: \"South Africa\", korName: \"남아프리카공화국\" },\n  { code: \"ES\", name: \"Spain\", korName: \"스페인\" },\n  { code: \"SD\", name: \"Sudan\", korName: \"수단\" },\n  { code: \"SS\", name: \"South Sudan\", korName: \"수단\" },\n  {\n    code: \"SJ\",\n    name: \"Svalbard and Jan Mayen\",\n    korName: \"스발비드 군도\",\n  },\n  { code: \"SE\", name: \"Sweden\", korName: \"스웨덴\" },\n  { code: \"SY\", name: \"Syria\", korName: \"시리아\" },\n  { code: \"TJ\", name: \"Tajikistan\", korName: \"타지키스탄\" },\n  { code: \"TH\", name: \"Thailand\", korName: \"태국\" },\n  { code: \"TK\", name: \"Tokelau\", korName: \"토켈라우\" },\n  {\n    code: \"TT\",\n    name: \"Trinidad And Tobago\",\n    korName: \"트리니다드 토바고\",\n  },\n  {\n    code: \"TT\",\n    name: \"Trinidad and Tobago\",\n    korName: \"트리니다드 토바고\",\n  },\n  { code: \"TR\", name: \"Turkey\", korName: \"터키\" },\n  {\n    code: \"TC\",\n    name: \"Turks and Caicos Islands\",\n    korName: \"투르크 & 카이코스 군도\",\n  },\n  {\n    code: \"TC\",\n    name: \"Turks and Caicos\",\n    korName: \"터크스 케이커스 제도\",\n  },\n  { code: \"UG\", name: \"Uganda\", korName: \"우간다\" },\n  {\n    code: \"AE\",\n    name: \"UAE\",\n    korName: \"아랍에미리트\",\n  },\n  {\n    code: \"AE\",\n    name: \"UAE\",\n    korName: \"UAE\",\n  },\n  { code: \"US\", name: \"USA\", korName: \"미국\" },\n  { code: \"UY\", name: \"Uruguay\", korName: \"우루과이\" },\n  { code: \"VU\", name: \"Vanuatu\", korName: \"바누아투\" },\n  { code: \"VE\", name: \"Venezuela\", korName: \"베네수엘라\" },\n  { code: \"VI\", name: \"Virgin Islands-U.S.\", korName: \"미령 버진군도\" },\n  { code: \"VI\", name: \"U.S. Virgin Islands\", korName: \"미국령 버진아일랜드\" },\n  {\n    code: \"VG\",\n    name: \"British Virgin Islands\",\n    korName: \"영국령 버진아일랜드\",\n  },\n  {\n    code: \"WF\",\n    name: \"Wallis and futuna Islands\",\n    korName: \"왈라스 & 퓨투나 군도\",\n  },\n  { code: \"YE\", name: \"Yemen\", korName: \"예멘\" },\n  { code: \"ZR\", name: \"Zaire\", korName: \"자이레\" },\n  { code: \"ZW\", name: \"Zimbabwe\", korName: \"짐바브웨\" },\n  { code: \"JP\", name: \"Diamond Princess\", korName: \"일본 크루즈\" },\n  { code: \"MF\", name: \"Saint Martin\", korName: \"세인트마틴 섬\" },\n  { code: \"GB\", name: \"Channel Islands\", korName: \"채널 제도\" },\n  { code: \"BL\", name: \"St. Barth\", korName: \"생바르텔레미\" },\n  { code: \"RS\", name: \"Serbia\", korName: \"세르비아\" },\n  { code: \"CD\", name: \"DRC\", korName: \"민주콩고\" },\n  { code: \"ME\", name: \"Montenegro\", korName: \"몬테네그로\" },\n  { code: \"CW\", name: \"Curaçao\", korName: \"퀴라소\" },\n  { code: \"SX\", name: \"Sint Maarten\", korName: \"신트마르턴\" },\n  { code: \"IM\", name: \"Isle of Man\", korName: \"맨섬\" },\n  { code: \"\", name: \"MS Zaandam\", korName: \"잔담호\" },\n  { code: \"NL\", name: \"Caribbean Netherlands\", korName: \"카리브 네덜란드\" },\n  { code: \"WORLD\", name: \"World\", korName: \"전세계\" },\n  {\n    code: \"BQ\",\n    name: \"Bonaire, Sint Eustatius and Saba\",\n    korName: \"카리브 네덜란드\",\n  },\n  {\n    code: \"JE\",\n    name: \"Jersey\",\n    korName: \"저지섬\",\n  },\n];\n","import React from \"react\";\nimport Country from \"./Coutry\";\nimport styled from \"styled-components\";\nimport useAxios from \"../hooks/useAxios\";\nimport { ISO } from \"../static/enum\";\n\ntype CountriesData = {\n  updated: number;\n  country: string;\n  countryInfo: {\n    _id: number;\n    iso2: string;\n    iso3: string;\n    lat: number;\n    long: number;\n    flag: string;\n  };\n  cases: number;\n  todayCases: number;\n  deaths: number;\n  todayDeaths: number;\n  recovered: number;\n  todayRecovered: number;\n  active: number;\n  critical: number;\n  casesPerOneMillion: number;\n  deathsPerOneMillion: number;\n  tests: number;\n  testsPerOneMillion: number;\n  population: number;\n  continent: number;\n  oneCasePerPeople: number;\n  oneDeathPerPeople: number;\n  oneTestPerPeople: number;\n  activePerOneMillion: number;\n  recoveredPerOneMillion: number;\n  criticalPerOneMillion: number;\n};\n\nconst CountryBoard = () => {\n  const { data, loading, error } = useAxios<Array<CountriesData>>(\n    \"https://disease.sh/v3/covid-19/countries?sort=cases\"\n  );\n\n  return (\n    <Block>\n      <h1>전세계 확진자 수</h1>\n\n      <Title>\n        <div>나라</div>\n        <div>총 확진자수</div>\n      </Title>\n      <Container>\n        {data !== null ? (\n          data.map((cur) => (\n            <Country\n              name={\n                ISO.find(\n                  (iso) =>\n                    iso.code === cur[\"countryInfo\"][\"iso2\"] ||\n                    iso.name === cur[\"country\"]\n                )?.korName\n              }\n              cases={cur[\"cases\"]}\n              flag={cur[\"countryInfo\"][\"flag\"]}\n            />\n          ))\n        ) : (\n          <div></div>\n        )}\n      </Container>\n    </Block>\n  );\n};\n\nconst Block = styled.div`\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 350px;\n  font-size: 13px;\n`;\n\nconst Container = styled.div`\n  width: 350px;\n  height: 120px;\n  font-size: 13px;\n  border: solid black 1px;\n  overflow: scroll;\n`;\n\nexport default CountryBoard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nconst KRInfo = () => {\n  // const getData = async () => {\n  //   const data = await axios.get(\n  //     \"https://api.corona-19.kr/korea/country/new/?serviceKey=73c2feb522af20d648a4438e7012568ca\"\n  //   );\n  //   console.log(data);\n  // };\n  // getData();\n  return <Block>ji</Block>;\n};\n\nconst Block = styled.div`\n  width: 100%;\n  background-color: red;\n`;\n\nexport default KRInfo;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Status from \"./components/Status\";\nimport BarChart from \"./components/BarChart\";\nimport LineChart from \"./components/LineChart\";\nimport CountryBoard from \"./components/CountryBoard\";\nimport KRInfo from \"./components/KRInfo\";\n\nfunction App() {\n  return (\n    <Container>\n      <Status />\n      <BarChart />\n      <LineChart />\n      <KRInfo />\n      <CountryBoard />\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n  width: 400px;\n  margin: 0 auto;\n  background-color: white;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}